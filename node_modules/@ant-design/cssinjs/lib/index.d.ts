import extractStyle from '@ant-design/cssinjs/lib/extractStylesinjs/lib/extractStyle';
import useCacheToken, { get@ant-design/cssinjs/lib/hooks/useCacheToken'@ant-design/cssinjs/lib/hooks/use@ant-design/cssinjs/lib/hooks/useCSSVarRegisterSVarRegister from '@ant-design/cssinjs/lib/hooks/useC@ant-design/cssinjs/lib/hooks/useStyleRegisterype { CSSInterpolation, CSSObject@ant-design/cssinjs/lib/hooks/useStyleRegisterinjs/lib/hooks/useStyleReg@ant-design/cssinjs/lib/Keyframesort useStyleRegister from '@ant-@ant-design/cssinjs/lib/linterssinjs/lib/hooks/useStyleRegister';
import Keyframes from '@ant-design/cssinjs/lib/Keyframes';
import t@ant-design/cssinjs/lib/linterster } from '@ant-design/cssinjs/lib/linters'@ant-design/cssinjs/lib/StyleContextacyNotSelectorLinter, logicalPropertiesLinter, NaNLinter, par@ant-design/cssinjs/lib/StyleContextter } from '@ant-design/cssinjs/lib/linters';
import type { StyleProvid@ant-design/cssinjs/lib/theme } from '@ant-design/cssinjs/lib/StyleContext';
@ant-design/cssinjs/lib/themeStyleContext, { createCache, StylePro@ant-design/cssinjs/lib/transformers/interfacen/cssinjs/lib/StyleContext';
import type { Abstract@ant-design/cssinjs/lib/transformers/legacyLogicalProperties} from '@ant-design/cssinjs/lib/th@ant-design/cssinjs/lib/transformers/px2remTheme, genCalc, Theme } f@ant-design/cssinjs/lib/utilant-design/cssinjs/lib/theme';
im@ant-design/cssinjs/lib/util/css-variablesmer } from '@ant-design/cssinjs/lib/transformers/interface';
import legacyLogicalPropertiesTransformer from '@ant-design/cssinjs/lib/transformers/legacyLogicalProperties';
import px2remTransformer from '@ant-design/cssinjs/lib/transformers/px2rem';
import { unit } from '@ant-design/cssinjs/lib/util';
import { token2CSSVar } from '@ant-design/cssinjs/lib/util/css-variables';
export { Theme, createTheme, useStyleRegister, useCSSVarRegister, useCacheToken, createCache, StyleProvider, StyleContext, Keyframes, extractStyle, getComputedToken, legacyLogicalPropertiesTransformer, px2remTransformer, logicalPropertiesLinter, legacyNotSelectorLinter, parentSelectorLinter, NaNLinter, token2CSSVar, unit, genCalc, };
export type { TokenType, CSSObject, CSSInterpolation, DerivativeFunc, Transformer, Linter, StyleProviderProps, AbstractCalculator, };
export declare const _experimental: {
    supportModernCSS: () => boolean;
};
